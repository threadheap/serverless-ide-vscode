{
    "type": "object",
    "additionalProperties": true,
    "properties": {
        "name": {
            "type": "string",
            "enum": [
                "aws"
            ]
        },
        "runtime": {
            "$ref": "#/definitions/aws:common:runtime"
        },
        "stage": {
            "type": "string",
            "default": "${opt:stage, 'dev'}",
            "description": "Set the default stage used. Default is dev"
        },
        "region": {
            "type": "string",
            "default": "${opt:region, 'us-east-1'}",
            "description": "Overwrite the default region used. Default is us-east-1"
        },
        "accountId": {
            "type": "string",
            "description": "AWS Account ID"
        },
        "stackName": {
            "type": "string",
            "description": "Use a custom name for the CloudFormation stack"
        },
        "apiName": {
            "type": "string",
            "description": "Use a custom name for the API Gateway API"
        },
        "websocketsApiName": {
            "type": "string",
            "description": "Use a custom name for the websockets API"
        },
        "websocketsApiRouteSelectionExpression": {
            "type": "string",
            "description": "Custom route selection expression"
        },
        "profile": {
            "type": "string",
            "description": "The default profile to use with this service"
        },
        "memorySize": {
            "type": "number",
            "description": "Overwrite the default memory size. Default is 1024"
        },
        "reservedConcurrency": {
            "type": "number",
            "description": "Overwrite the default reserved concurrency limit. By default, AWS uses account concurrency limit"
        },
        "timeout": {
            "type": "number",
            "description": "The default is 6 seconds. Note: API Gateway current maximum is 30 seconds"
        },
        "logRetentionInDays": {
            "type": "number",
            "description": "Set the default RetentionInDays for a CloudWatch LogGroup"
        },
        "deploymentBucket": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Deployment bucket name. Default is generated by the framework",
                    "default": "com.serverless.${self:provider.region}.deploys"
                },
                "serverSideEncryption": {
                    "type": "string",
                    "enum": [
                        "AES256"
                    ],
                    "description": "when using server-side encryption"
                },
                "tags": {
                    "$ref": "#/definitions/common:tags",
                    "description": "Tags that will be added to each of the deployment resources"
                }
            }
        },
        "deploymentPrefix": {
            "type": "string",
            "description": "The S3 prefix under which deployed artifacts should be stored. Default is serverless",
            "default": "serverless"
        },
        "role": {
            "type": "string",
            "description": "Overwrite the default IAM role which is used for all functions",
            "default": "arn:aws:iam::XXXXXX:role/role"
        },
        "cfnRole": {
            "type": "string",
            "description": "ARN of an IAM role for CloudFormation service. If specified, CloudFormation uses the role's credentials",
            "default": "arn:aws:iam::XXXXXX:role/role"
        },
        "versionFunctions": {
            "type": "boolean",
            "description": "Optional function versioning",
            "default": false
        },
        "environment": {
            "patternProperties": {
                "^[a-zA-Z0-9]+$": {}
            },
            "type": "object",
            "description": "Service wide environment variables"
        },
        "endpointType": {
            "type": "string",
            "default": "regional",
            "description": "Optional endpoint configuration for API Gateway REST API. Default is Edge"
        },
        "apiKeys": {
            "type": "array",
            "items": {
                "oneOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "value": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "apiGateway": {
            "type": "object",
            "description": "Optional API Gateway global config",
            "properties": {
                "restApiId": {
                    "type": "string",
                    "description": "REST API resource ID. Default is generated by the framework"
                },
                "restApiRootResourceId": {
                    "type": "string",
                    "description": "Root resource ID, represent as / path"
                },
                "restApiResources": {
                    "description": "List of existing resources that were created in the REST API. This is required or the stack will be conflicted",
                    "type": "object",
                    "patternProperties": {
                        "^[a-zA-Z0-9]+$": {
                            "type": "string"
                        }
                    }
                },
                "websocketApiId": {
                    "type": "string",
                    "description": "Websocket API resource ID. Default is generated by the framewok"
                },
                "apiKeySourceType": {
                    "type": "string",
                    "description": "Source of API key for usage plan. HEADER or AUTHORIZER",
                    "enum": [
                        "HEADER",
                        "AUTHORIZER"
                    ],
                    "default": "HEADER"
                },
                "minimumCompressionSize": {
                    "type": "number",
                    "description": "Compress response when larger than specified size in bytes (must be between 0 and 10485760)",
                    "default": 1024
                },
                "description": {
                    "type": "string",
                    "description": "Optional description for the API Gateway stage deployment"
                },
                "binaryMediaTypes": {
                    "type": "array",
                    "description": "Optional binary media types the API might return",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "usagePlan": {
            "type": "object",
            "additionalProperties": false,
            "description": "Optional usage plan configuration",
            "properties": {
                "quota": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "limit": {
                            "type": "number",
                            "default": 5000
                        },
                        "offset": {
                            "type": "number",
                            "default": 2
                        },
                        "period": {
                            "type": "string",
                            "default": "MONTH"
                        }
                    }
                },
                "throttle": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "burstLimit": {
                            "type": "number",
                            "default": 200
                        },
                        "rateLimit": {
                            "type": "number",
                            "default": 100
                        }
                    }
                }
            }
        },
        "tags": {
            "$ref": "#/definitions/common:tags",
            "description": "Tags that will be added to each of the deployment resources"
        },
        "stackTags": {
            "$ref": "#/definitions/common:tags",
            "description": "Optional CF stack tags"
        },
        "iamManagedPolicies": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "Optional IAM Managed Policies, which allows to include the policies into IAM Role"
        },
        "iamRoleStatements": {
            "type": "array",
            "description": "IAM role statements so that services can be accessed in the AWS account",
            "items": {
                "$ref": "#/definitions/aws:common:role-statement"
            }
        },
        "stackPolicy": {
            "type": "array",
            "description": "Optional CF stack policy. The example below allows updates to all resources except deleting/replacing EC2 instances (use with caution!)",
            "items": {
                "$ref": "#/definitions/aws:common:policy"
            }
        },
        "vpc": {
            "$ref": "#/definitions/aws:common:vpc"
        },
        "notificationArns": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "List of existing Amazon SNS topics in the same region where notifications about stack events are sent."
        },
        "resourcePolicy": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/aws:common:policy"
            }
        },
        "tracing": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "apiGateway": {
                    "type": "boolean",
                    "default": true
                },
                "lambda": {
                    "type": "boolean",
                    "description": "Optional, can be true (true equals 'Active'), 'Active' or 'PassThrough'"
                }
            },
            "required": [
                "apiGateway"
            ]
        },
        "logs": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "restApi": {
                    "description": "Optional configuration which specifies if API Gateway logs are used. This can either be set to `true` to use defaults, or configured via subproperties.",
                    "oneOf": [
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "accessLogging": {
                                    "type": "boolean",
                                    "description": "Optional configuration which enables or disables access logging. Defaults to true.",
                                    "default": true
                                },
                                "format": {
                                    "type": "string",
                                    "description": "Optional configuration which specifies the log format to use for access logging",
                                    "default": "requestId: $context.requestId"
                                },
                                "executionLogging": {
                                    "type": "boolean",
                                    "description": "Optional configuration which enables or disables execution logging. Defaults to true.",
                                    "default": true
                                },
                                "level": {
                                    "type": "string",
                                    "enum": [
                                        "INFO",
                                        "ERROR"
                                    ],
                                    "description": "Optional configuration which specifies the log level to use for execution logging. May be set to either INFO or ERROR.",
                                    "default": "INFO"
                                },
                                "fullExecutionData": {
                                    "type": "boolean",
                                    "description": "Optional configuration which specifies whether or not to log full requests/responses for execution logging. Defaults to true.",
                                    "default": true
								},
								"role": {
									"type": "string",
									"description": "Optional IAM role for ApiGateway to use when managing CloudWatch Logs",
									"default": "arn:aws:iam::XXXXXX:role/role"
								}
                            }
                        }
                    ]
                },
                "websocket": {
					"description": "Optional configuration which specifies if Websocket logs are used. This can either be set to `true` to use defaults, or configured via subproperties.",
					"oneOf": [
                        {
                            "type": "boolean"
                        },
                        {
							"level": {
								"type": "string",
								"enum": [
									"INFO",
									"ERROR"
								],
								"description": "Optional configuration which specifies the log level to use for execution logging. May be set to either INFO or ERROR.",
								"default": "INFO"
							}
						}
					]
                },
                "frameworkLambda": {
                    "type": "boolean",
                    "description": "Optional, whether to write CloudWatch logs for custom resource lambdas as added by the framework",
                    "default": true
                }
            }
        },
        "variableSyntax": {
            "type": "string",
            "description": "A custom syntax to overwrite the default ${xxx} syntax to resolve conflicts with some CloudFormation functionality",
            "default": "\\${([ ~:a-zA-Z0-9._@\\'\",\\-\\/\\(\\)]+?)}"
        }
    },
    "required": [
        "name"
    ]
}